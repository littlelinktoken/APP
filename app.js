const web3=new Web3(Web3.givenProvider);const little_STAKE_FARM_CONTARCT='#';const little_STAKE_FARM_ABI=[{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},],stateMutability:'nonpayable',type:'constructor',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'_tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'tokens',type:'uint256',},],name:'AddedToExistingFarm',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'staker',type:'address',},{indexed:true,internalType:'uint256',name:'tokens',type:'uint256',},],name:'AddedToExistingStake',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'newAPY',type:'uint256',},],name:'FarmingRateChanged',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'_tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'_amount',type:'uint256',},],name:'FarmingStarted',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'governanceAddress',type:'address',},],name:'GovernanceSet',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'_from',type:'address',},{indexed:true,internalType:'address',name:'_to',type:'address'},],name:'OwnershipTransferred',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'claimer',type:'address',},{indexed:true,internalType:'uint256',name:'reward',type:'uint256',},],name:'RewardClaimed',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'staker',type:'address',},{indexed:true,internalType:'uint256',name:'tokens',type:'uint256',},],name:'Staked',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'uint256',name:'newAPY',type:'uint256',},],name:'StakingRateChanged',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'APY',type:'uint256'},],name:'TokenAdded',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'APY',type:'uint256'},],name:'TokenRemoved',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'claimer',type:'address',},{indexed:true,internalType:'uint256',name:'stakedTokens',type:'uint256',},],name:'TokensClaimed',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'_tokenAddress',type:'address',},{indexed:true,internalType:'uint256',name:'_yield',type:'uint256',},],name:'YieldCollected',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'uint256',name:'yieldCollectionFee',type:'uint256',},],name:'YieldCollectionFeeChanged',type:'event',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'address',name:'_user',type:'address'},],name:'ActiveFarmDeposit',outputs:[{internalType:'uint256',name:'_activeDeposit',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'uint256',name:'_amount',type:'uint256'},],name:'AddToFarm',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_amount',type:'uint256'}],name:'AddToStake',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'uint256',name:'_rate',type:'uint256'},],name:'AddToken',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'uint256',name:'_newFarmingRate',type:'uint256'},],name:'ChangeFarmingRate',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_newStakingRate',type:'uint256'},],name:'ChangeStakingRate',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[],name:'ClaimReward',outputs:[],stateMutability:'payable',type:'function',},{inputs:[],name:'ClaimStakedTokens',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'uint256',name:'_amount',type:'uint256'},],name:'Farm',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'address',name:'_user',type:'address'},],name:'LastFarmedOn',outputs:[{internalType:'uint256',name:'_unixLastFarmedTime',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'LastStakedOn',outputs:[{internalType:'uint256',name:'_unixLastStakedTime',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[],name:'LatestStakingRate',outputs:[{internalType:'uint256',name:'APY',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_caller',type:'address'}],name:'PendingReward',outputs:[{internalType:'uint256',name:'_pendingReward',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'address',name:'_caller',type:'address'},],name:'PendingYield',outputs:[{internalType:'uint256',name:'_pendingRewardWeis',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},],name:'RemoveToken',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_fee',type:'uint256'}],name:'SetClaimFee',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_minStakeLimit',type:'uint256'},],name:'SetMinStakeLimit',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_seconds',type:'uint256'}],name:'SetStakingPeriod',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_fee',type:'uint256'}],name:'SetYieldCollectionFee',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_amount',type:'uint256'}],name:'Stake',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'StakingTimeLeft',outputs:[{internalType:'uint256',name:'_secsLeft',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'address',name:'_user',type:'address'},],name:'TotalFarmingRewards',outputs:[{internalType:'uint256',name:'_totalEarned',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'TotalStakeRewardsClaimedTillToday',outputs:[{internalType:'uint256',name:'_totalEarned',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'uint256',name:'_amount',type:'uint256'},],name:'WithdrawFarmedTokens',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},],name:'Yield',outputs:[],stateMutability:'payable',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'YourActiveStake',outputs:[{internalType:'uint256',name:'_activeStake',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'YourStakingPeriod',outputs:[{internalType:'uint256',name:'_stakingPeriod',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'YourStakingRate',outputs:[{internalType:'uint256',name:'_stakingRate',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_tokenAddress',type:'address'},{internalType:'address',name:'_user',type:'address'},],name:'YourTotalFarmingTillToday',outputs:[{internalType:'uint256',name:'_totalFarming',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_user',type:'address'}],name:'YourTotalStakesTillToday',outputs:[{internalType:'uint256',name:'_totalStakes',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[],name:'little',outputs:[{internalType:'contract Token',name:'',type:'address'}],stateMutability:'view',type:'function',},{inputs:[],name:'minStakeLimit',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[],name:'owner',outputs:[{internalType:'address payable',name:'',type:'address'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'_govAddress',type:'address'}],name:'setGovernanceContract',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[],name:'stakeClaimFee',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[],name:'stakingPeriod',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'',type:'address'}],name:'tokens',outputs:[{internalType:'bool',name:'exists',type:'bool'},{internalType:'uint256',name:'rate',type:'uint256'},],stateMutability:'view',type:'function',},{inputs:[],name:'totalRewards',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[],name:'totalYield',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address payable',name:'_newOwner',type:'address'},],name:'transferOwnership',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[],name:'yieldCollectionFee',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},];const BEE_TOKEN_CONTRACT='0x4639cd8cd52EC1CF2E496a606ce28D8AfB1C792F';const BEE_TOKEN_ABI=[{inputs:[],stateMutability:'nonpayable',type:'constructor'},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'tokenOwner',type:'address',},{indexed:true,internalType:'address',name:'spender',type:'address',},{indexed:false,internalType:'uint256',name:'tokens',type:'uint256',},],name:'Approval',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'_from',type:'address',},{indexed:true,internalType:'address',name:'_to',type:'address'},],name:'OwnershipTransferred',type:'event',},{anonymous:false,inputs:[{indexed:true,internalType:'address',name:'from',type:'address'},{indexed:true,internalType:'address',name:'to',type:'address'},{indexed:false,internalType:'uint256',name:'tokens',type:'uint256',},],name:'Transfer',type:'event',},{inputs:[{internalType:'uint256',name:'_amount',type:'uint256'}],name:'BurnTokens',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'uint256',name:'_amount',type:'uint256'},{internalType:'address',name:'_beneficiary',type:'address'},],name:'MintTokens',outputs:[{internalType:'bool',name:'',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'_address',type:'address'}],name:'SetStakeFarmingContract',outputs:[],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'tokenOwner',type:'address'},{internalType:'address',name:'spender',type:'address'},],name:'allowance',outputs:[{internalType:'uint256',name:'remaining',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'spender',type:'address'},{internalType:'uint256',name:'value',type:'uint256'},],name:'approve',outputs:[{internalType:'bool',name:'',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'tokenOwner',type:'address'}],name:'balanceOf',outputs:[{internalType:'uint256',name:'balance',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[],name:'decimals',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'spender',type:'address'},{internalType:'uint256',name:'subtractedValue',type:'uint256'},],name:'decreaseAllowance',outputs:[{internalType:'bool',name:'',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'spender',type:'address'},{internalType:'uint256',name:'addedValue',type:'uint256'},],name:'increaseAllowance',outputs:[{internalType:'bool',name:'',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[],name:'name',outputs:[{internalType:'string',name:'',type:'string'}],stateMutability:'view',type:'function',},{inputs:[],name:'owner',outputs:[{internalType:'address payable',name:'',type:'address'}],stateMutability:'view',type:'function',},{inputs:[],name:'symbol',outputs:[{internalType:'string',name:'',type:'string'}],stateMutability:'view',type:'function',},{inputs:[],name:'totalSupply',outputs:[{internalType:'uint256',name:'',type:'uint256'}],stateMutability:'view',type:'function',},{inputs:[{internalType:'address',name:'to',type:'address'},{internalType:'uint256',name:'tokens',type:'uint256'},],name:'transfer',outputs:[{internalType:'bool',name:'success',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address',name:'from',type:'address'},{internalType:'address',name:'to',type:'address'},{internalType:'uint256',name:'tokens',type:'uint256'},],name:'transferFrom',outputs:[{internalType:'bool',name:'success',type:'bool'}],stateMutability:'nonpayable',type:'function',},{inputs:[{internalType:'address payable',name:'_newOwner',type:'address'},],name:'transferOwnership',outputs:[],stateMutability:'nonpayable',type:'function',},];const beeInstance=new web3.eth.Contract(BEE_TOKEN_ABI,BEE_TOKEN_CONTRACT);const littleStakeInstance=new web3.eth.Contract(little_STAKE_FARM_ABI,little_STAKE_FARM_CONTARCT);let loginUser;async function connectWallet(){try{document.querySelectorAll(".connectWalletBtn").forEach(txt=>{txt.textContent="Connected";})
let user;await Web3.givenProvider.enable();await web3.eth.getCoinbase((err,acc)=>{}).then(function(ads){$('#address').html(ads);user=ads;});const littleBalance=await beeInstance.methods.balanceOf(user).call({from:user}).then(function(userBalance){const _amount=web3.utils.fromWei(userBalance,'ether');$('#bal').html(_amount);});const stakedBalance=await littleStakeInstance.methods.YourActiveStake(user).call({from:user}).then(function(stkBalance){let _amount=web3.utils.fromWei(stkBalance,'ether');$('#stakedBalance').html(_amount);});const StakingTimeLeft=await littleStakeInstance.methods.StakingTimeLeft(user).call({from:user}).then(function(stkTimeLeft){if(stkTimeLeft!=0){document.getElementById('clockIcon').style.display='none';}
$('#timeLeft').html(stkTimeLeft);});const PendingReward=await littleStakeInstance.methods.PendingReward(user).call({from:user}).then(function(pendRew){const _amount=web3.utils.fromWei(pendRew,'ether');$('#PendingReward').html(_amount);});const TotalStakeRewardsClaimedTillToday=await littleStakeInstance.methods.TotalStakeRewardsClaimedTillToday(user).call({from:user}).then(function(totalClaims){const _amount=web3.utils.fromWei(totalClaims,'ether');$('#totalClaims').html(_amount);});const TotalStakinglittle=await beeInstance.methods.balanceOf(little_STAKE_FARM_CONTARCT).call({from:user}).then(function(userBalance){const _amount=web3.utils.fromWei(userBalance,'ether');$('#TotalStakinglittle').html(_amount);});const totalRewards=await littleStakeInstance.methods.totalRewards().call().then(function(totalRewards){let convtoEth=web3.utils.fromWei(totalRewards,'ether');$('#totalRewards').html(convtoEth);});const yStkPeriod=await littleStakeInstance.methods.YourStakingPeriod(user).call().then(function(stkprd){$('#stakingPeriods').html(stkprd);});const yStkRate=await littleStakeInstance.methods.YourStakingRate(user).call().then(function(stkRate){let convStakeRate=stkRate/10000;$('#stkRate').html(convStakeRate);});const LStkRate=await littleStakeInstance.methods.LatestStakingRate().call().then(function(lStkRate){let convStakeRate=lStkRate/10000;$('#lStakingRate').html(convStakeRate);});const stkPeriodsDefault=await littleStakeInstance.methods.stakingPeriod().call().then(function(stperiodsDefault){$('#stakingP').html(stperiodsDefault);});const stkClaimFeesDefault=await littleStakeInstance.methods.stakeClaimFee().call().then(function(stkClaimFeesDefault){let convStkClaimFeeDefault=web3.utils.fromWei(stkClaimFeesDefault,'ether');$('#stkClaimFeesDefault').html(convStkClaimFeeDefault);});const minStakAmtDefault=await littleStakeInstance.methods.minStakeLimit().call().then(function(minStakAmt){let convMinStakeValueDefault=web3.utils.fromWei(minStakAmt,'ether');$('#minStakAmt').html(convMinStakeValueDefault);});loginUser=user;}catch{console.log('Please Install a wallet');}}
async function approve(){if(loginUser){const _spender='0xc5142a066dfcabbd20ff8b581c5e82f523af21bc';var value=document.getElementById('amount').value;const _amount=web3.utils.toWei(value,'ether');const approveTrans=await beeInstance.methods.approve(_spender,_amount).send({from:loginUser}).then(function(err,apr){console.log(err);console.log(apr);});console.log('suces');}else{}}
async function stake(){if(loginUser){var value=document.getElementById('amount').value;const _amount=web3.utils.toWei(value,'ether');const tokenStake=littleStakeInstance.methods.Stake(_amount).send({from:loginUser}).then(function(err,stake){console.log(err);console.log(stake);});}else{}}
async function addToStake(){if(loginUser){var value=document.getElementById('amount').value;const _amount=web3.utils.toWei(value,'ether');const adtoStake=littleStakeInstance.methods.AddToStake(_amount).send({from:loginUser}).then(function(err,stake){console.log(err);console.log(stake);});}else{}}
async function ClaimStakedTokens(){if(loginUser){const claimStkToken=littleStakeInstance.methods.ClaimStakedTokens().send({from:loginUser}).then(function(err,stake){console.log(err);console.log(stake);});}else{}}
async function ClaimReward(){if(loginUser){const _amount=web3.utils.toWei('0.001','ether');console.log(_amount);const tokenStake=littleStakeInstance.methods.ClaimReward().send({from:loginUser,value:_amount});}else{}}
window.addEventListener("load",function(){document.querySelector("#l-connect-wallet").addEventListener("click",function(){connectWallet()})})